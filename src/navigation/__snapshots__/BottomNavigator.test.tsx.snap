// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given BottomNavigator navigation When it is rendered Then it should show match the last snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenContainer
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RNSScreen
      activityState={2}
      collapsable={false}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          Array [
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
              "flex": 1,
            },
            Array [
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              },
              undefined,
            ],
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <RNSScreenStack
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <RNSScreen
                collapsable={false}
                forwardedRef={[Function]}
                nativeID="animatedComponent"
                onAppear={[Function]}
                onDisappear={[Function]}
                onDismissed={[Function]}
                onWillDisappear={[Function]}
                replaceAnimation="push"
                stackPresentation="push"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <RNSScreenStackHeaderConfig
                  backButtonInCustomView={false}
                  backgroundColor="rgb(255, 255, 255)"
                  color="rgb(0, 122, 255)"
                  direction="ltr"
                  disableBackButtonMenu={false}
                  hidden={true}
                  hideBackButton={false}
                  hideShadow={false}
                  largeTitleHideShadow={false}
                  title="CollectionsTattooArtist"
                  titleColor="rgb(28, 28, 30)"
                  topInsetEnabled={false}
                  translucent={false}
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                      },
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                    style={
                      Object {
                        "backgroundColor": "#FFF",
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#FFF",
                            "borderBottomColor": "#7C6B53",
                            "borderBottomWidth": 1,
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingHorizontal": 20,
                            "paddingTop": 50,
                            "paddingVertical": 10,
                          }
                        }
                      >
                        <View
                          style={Object {}}
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <Image
                              onError={[Function]}
                              source={
                                Object {
                                  "testUri": "../../../src/assets/utoo-logo.png",
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "height": 0,
                                    "width": 100,
                                  },
                                  undefined,
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View>
                          <View
                            accessibilityRole="button"
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={Object {}}
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#7C6B53",
                                    "fontSize": 15,
                                    "paddingEnd": 10,
                                  }
                                }
                              >
                                Salir
                              </Text>
                            </View>
                            <View
                              style={Object {}}
                            >
                              <Image
                                onError={[Function]}
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icono-user.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "height": 0,
                                      "width": 30,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <RCTScrollView>
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "marginBottom": 100,
                                "marginTop": 80,
                                "padding": 20,
                              },
                              Object {
                                "marginTop": 130,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                  "marginVertical": 20,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                    "left": 0,
                                    "position": "absolute",
                                  }
                                }
                              >
                                <Image
                                  onError={[Function]}
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icono-rombo-titulo.png",
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "height": 0,
                                        "width": 50,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                              </View>
                              <View
                                style={
                                  Object {
                                    "flex": 3,
                                    "left": 30,
                                    "position": "absolute",
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "color": "#141414",
                                      "fontSize": 20,
                                    }
                                  }
                                >
                                  MIS COLECCIONES
                                  <Text
                                    style={
                                      Object {
                                        "fontWeight": "800",
                                      }
                                    }
                                  />
                                </Text>
                              </View>
                            </View>
                          </View>
                          <Text>
                            La página se está cargando...
                          </Text>
                        </View>
                      </View>
                    </RCTScrollView>
                  </RCTSafeAreaView>
                </View>
              </RNSScreen>
            </RNSScreenStack>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenContainer>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    onLayout={[Function]}
    pointerEvents="auto"
    style={
      Object {
        "backgroundColor": "rgb(255, 255, 255)",
        "borderTopColor": "#A19178",
        "borderTopWidth": 1,
        "bottom": 0,
        "elevation": 8,
        "height": 49,
        "left": 0,
        "paddingBottom": 0,
        "paddingHorizontal": 0,
        "position": "absolute",
        "right": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessibilityRole="tablist"
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="Colecciones"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": true,
          }
        }
        accessibilityStates={
          Array [
            "selected",
          ]
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <Image
              onError={[Function]}
              source={
                Object {
                  "testUri": "../../../src/assets/nav-icono-colecciones.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 0,
                    "width": 30,
                  },
                  undefined,
                ]
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <Image
              onError={[Function]}
              source={
                Object {
                  "testUri": "../../../src/assets/nav-icono-colecciones.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": 0,
                    "width": 30,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
